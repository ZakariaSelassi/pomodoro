{"version":3,"sources":["components/Timer.js","App.js","index.js"],"names":["momentDurationFormatSetup","moment","Timer","useState","secondsLeft","setSecondsLeft","timer","setTimer","TimerFix","minutes","duration","format","toggle","setToggle","useEffect","window","location","reload","clearInterval","className","onClick","console","log","setInterval","start","isPlaying","colors","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAMAA,IAA0BC,KAC1B,IAqEeC,EArED,WAAO,IAAD,EACsBC,mBAAS,MAD/B,mBACTC,EADS,KACIC,EADJ,OAEUF,qBAFV,mBAETG,EAFS,KAEFC,EAFE,OAGeJ,mBAAS,MAHxB,mBAGTK,EAHS,KAIVC,GAJU,KAIAR,IAAOS,SAASN,EAAY,KAAKO,OAAO,UAJxC,EAKWR,oBAAS,GALpB,mBAKTS,EALS,KAKFC,EALE,OAMmBV,oBAAS,GAN5B,6BAyBhBW,qBAAU,WACY,IAAhBV,IACFW,OAAOC,SAASC,SAChBC,cAAcZ,MAEf,CAACF,EAAaE,IAEjBQ,qBAAU,WACR,OAAO,kBAAMI,cAAcZ,MAC1B,CAACA,IAWJ,OACI,qCACI,gDACA,sBAAKa,UAAU,QAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,wBAAQA,UAAU,eAAeC,QAAS,YA3C5C,WAEV,GAAGR,EACCS,QAAQC,IAAI,QACZJ,cAAcZ,OACb,CACD,IAAMA,EAAQiB,aAAY,WACtBlB,GAAe,SAACD,GAAD,OAAiBA,EAAc,KAC1B,IAAhBA,GACFc,cAAcZ,KAEf,KACHC,EAASD,GACTe,QAAQC,IAAI,OAElBT,GAAWD,GA4BkDY,IAAjD,SAA8DZ,EAAS,QAAU,QACjF,wBAAQO,UAAWP,EAAS,eAAiB,wBAAyBQ,QAhBjE,WAEdR,GACCC,GAAWD,GAEfM,cAAcZ,GACdD,EAAeG,GACfO,OAAOC,SAASC,UASJ,8BAEJ,sBAAKE,UAAU,gBAAf,UACI,cAAC,uBAAD,CAAsBM,YAAWb,EAAuBF,SAAUN,EAAasB,OAAQ,CAAC,CAAC,UAAW,KAAM,CAAC,UAAW,KAAM,CAAC,UAAW,MAAxI,SACK,cAAExB,MAAF,OAAaO,KAElB,qBAAKU,UAAU,YAAf,SACI,4BAAIP,EAAS,UAAY,qBCtDlCe,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACM,cAAC,EAAD,OCDVS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b7ce68af.chunk.js","sourcesContent":["import React ,{useState,useEffect}from 'react';\r\nimport './Timer.css'\r\nimport moment from 'moment';\r\nimport momentDurationFormatSetup from 'moment-duration-format'\r\nimport {CountdownCircleTimer} from \"react-countdown-circle-timer\";\r\n\r\nmomentDurationFormatSetup(moment)\r\nconst Timer = () => {\r\n    const [secondsLeft, setSecondsLeft] = useState(1500);\r\n    const [timer, setTimer] = useState();\r\n    const [TimerFix,setTimerFix] = useState(1500)\r\n    const minutes = moment.duration(secondsLeft,'s').format('mm:ss')\r\n    const [toggle,setToggle] = useState(false);\r\n    const [toggleBtn , setToggleBtn] = useState(false);\r\n    const start = () => {\r\n\r\n        if(toggle){\r\n            console.log(\"stop\")\r\n            clearInterval(timer);\r\n        }else{\r\n            const timer = setInterval(() => {\r\n                setSecondsLeft((secondsLeft) => secondsLeft - 1);\r\n                if (secondsLeft === 0) {\r\n                  clearInterval(timer);\r\n                }\r\n              }, 1000);\r\n              setTimer(timer);\r\n              console.log(\"run\")\r\n        }\r\n        setToggle(!toggle)\r\n     \r\n    };\r\n    useEffect(() => {\r\n      if (secondsLeft === 0) {\r\n        window.location.reload();\r\n        clearInterval(timer);\r\n      }\r\n    }, [secondsLeft, timer]);\r\n\r\n    useEffect(() => {\r\n      return () => clearInterval(timer);\r\n    }, [timer]);\r\n    const refreshTimer = () => {  \r\n\r\n        if(toggle){\r\n            setToggle(!toggle)\r\n        }\r\n        clearInterval(timer);\r\n        setSecondsLeft(TimerFix);\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Pomodoro Timer</h1>\r\n            <div className=\"clock\">\r\n                <div className=\"clock-container\">\r\n                    <button className=\"ControlleBtn\" onClick={() => {start();} }>{toggle ? \"Pause\" : \"Run\"}</button>\r\n                    <button className={toggle ? \"ControlleBtn\" : \"ControlleBtn hiddeBtn\"} onClick={refreshTimer}>Refresh timer</button>\r\n                </div>\r\n                <div className=\"timer-wrapper\">\r\n                    <CountdownCircleTimer isPlaying={toggle ? true : false} duration={secondsLeft} colors={[['#5aff15', 0.33],['#F7B801', 0.33],['#A30000', 0.33],]}>\r\n                        {({Timer}) => minutes  } \r\n                    </CountdownCircleTimer>\r\n                    <div className=\"timer-msg\">\r\n                        <p>{toggle ? \"Running\" : \"Play\"}</p>\r\n                    </div>\r\n\r\n                </div>\r\n               \r\n            </div>\r\n           \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Timer;","import './App.css';\nimport Timer from './components/Timer'\nimport React,{component} from 'react';\nfunction App() {\n  return (\n    <div className=\"App\">\n          <Timer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}